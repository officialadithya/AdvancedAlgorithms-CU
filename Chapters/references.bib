@inproceedings{carmosino2016nseth, author = {Carmosino, Marco L. and Gao, Jiawei and Impagliazzo, Russell and Mihajlin, Ivan and Paturi, Ramamohan and Schneider, Stefan}, title = {Nondeterministic Extensions of the Strong Exponential Time Hypothesis and Consequences for Non-reducibility}, year = {2016}, isbn = {9781450340571}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, url = {https://doi.org/10.1145/2840728.2840746}, doi = {10.1145/2840728.2840746}, abstract = {We introduce the Nondeterministic Strong Exponential Time Hypothesis (NSETH) as a natural extension of the Strong Exponential Time Hypothesis (SETH). We show that both refuting and proving NSETH would have interesting consequences.In particular we show that disproving NSETH would give new nontrivial circuit lower bounds. On the other hand, NSETH implies non-reducibility results, i.e. the absence of (deterministic) fine-grained reductions from SAT to a number of problems. As a consequence we conclude that unless this hypothesis fails, problems such as 3-SUM, APSP and model checking of a large class of first-order graph properties cannot be shown to be SETH-hard using deterministic or zero-error probabilistic reductions.}, booktitle = {Proceedings of the 2016 ACM Conference on Innovations in Theoretical Computer Science}, pages = {261â€“270}, numpages = {10}, keywords = {seth, nondeterminism, fine-grained complexity, conditional lower bounds, computational complexity, all-pairs shortest path, 3-sum}, location = {Cambridge, Massachusetts, USA}, series = {ITCS '16} }
@inproceedings{schoning1999probabilisticksat, author = {Sch\"{o}ning, Uwe}, title = {A Probabilistic Algorithm for k-SAT and Constraint Satisfaction Problems}, year = {1999}, isbn = {0769504094}, publisher = {IEEE Computer Society}, address = {USA}, abstract = {We present a simple probabilistic algorithm for solving k-SAT, and more generally, for solving constraint satisfaction problems (CSP). The algorithm follows a simple local-search paradigm: randomly guess an initial assignment and then, guided by those clauses (constraints) that are not satisfied, by successively choosing a random literal from such a clause and flipping the corresponding bit, try to find a satisfying assignment. If no satisfying assignment is found after O(n) steps, start over again. Our analysis shows that for any satisfiable k-CNF formula with n variables this process has to be repeated only t times, on the average, to find a satisfying assignment, where t is within a polynomial factor of (2(1-1/k))n. This is the fastest (and also the simplest) algorithm for 3-SAT known up to date. We consider also the more general case of a CSP with n variables, each variable taking at most d values, and constraints of order l, and analyze the complexity of the corresponding (generalized) algorithm. It turns out that any CSP can be solved with complexity about (d(1-1/l))n.}, booktitle = {Proceedings of the 40th Annual Symposium on Foundations of Computer Science}, pages = {410}, keywords = {constraint satisfaction problem, k-SAT, local-search algorithm, satisfiability}, series = {FOCS '99} }
